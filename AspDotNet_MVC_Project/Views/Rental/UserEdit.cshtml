@using Microsoft.EntityFrameworkCore
@model AspDotNet_MVC_Project.Models.User
@inject UserManager<User> UserManager
@inject RoleManager<IdentityRole> RoleManager

@{
    ViewData["Title"] = "Edit user";
}

<h1>Edit user</h1>

    <h4>User</h4>
    <hr/>
    <div class="row">
        <div class="col-md-4">
            <form asp-action="UserEdit">
                <input type="hidden" asp-for="Id" />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control"/>
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control"/>
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IsVerified" class="control-label"></label>
                    <input asp-for="IsVerified" class="form-check-input" type="checkbox" />
                    <span asp-validation-for="IsVerified" class="text-danger"></span>
                </div>
                @{
                    var allRoles = await RoleManager.Roles.ToListAsync();
                    var userRoles = await UserManager.GetRolesAsync(Model);
                }

                <div class="form-group">
                    <label class="control-label">Roles</label>
                    @foreach (var role in allRoles)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox"
                                   name="SelectedRoles" value="@role.Name"
                                   @(userRoles.Contains(role.Name) ? "checked" : "")/>
                            <label class="form-check-label">@role.Name</label>
                        </div>
                    }
                </div>
                @*stinky hack*@
                <input asp-for="Password" value="Aaaa1234!" type="hidden"/>
                <input asp-for="ConfirmPassword" value="Aaaa1234!" type="hidden"/>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary"/>
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="UserList">Back to List</a>
    </div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
